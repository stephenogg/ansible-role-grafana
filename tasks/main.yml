---

- name: grafana | install grafana gpg key
  apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present

- name: grafana | add apt repository
  apt_repository:
    repo: deb https://packages.grafana.com/oss/deb stable main
    state: present
    
- name: grafana | install grafana & certbot
  apt:
    name: ['grafana', 'certbot']
    state: present
    update_cache: true

- name: grafana | enable grafana service but stopped so we can get a certificate
  systemd:
    name: grafana-server
    state: stopped
    enabled: true
    
- name: grafana | create letsencrypt challenge directory
  file:
    path: /srv/www/letsencrypt/.well-known/
    recurse: yes
    state: directory
    mode: 0755
 
- name: grafana | check if certificate already exists.
  stat:
    path: /etc/letsencrypt/live/{{ cert_domain }}/cert.pem
  register: letsencrypt_cert
    
- name: grafana | stop services to allow certbot to generate a cert.
  service:
    name: grafana-server
    state: stopped
  when: not letsencrypt_cert.stat.exists

- name: grafana | generate new certificate if one doesn't exist.
  command: "{{ certbot_create_command }}"
  when: not letsencrypt_cert.stat.exists

- name: grafana | start services after cert has been generated.
  service:
    name: grafana-server
    state: started
  when: not letsencrypt_cert.stat.exists
  
- name: grafana | add cron job for certbot renewal
  template:
    src: cron-daily-certbot-renew.j2
    dest: /etc/cron.daily/certbot-renew
    mode: 0755
  #when: not letsencrypt_cert.stat.exists

- name: grafana | add renewal deploy hooks
  template:
    src: letsencrypt-renewal-hooks-deploy-commands.j2
    dest: /etc/letsencrypt/renewal-hooks/deploy/commands.sh
    mode: 0755
  #when: not letsencrypt_cert.stat.exists
  
- name: grafana | add sslcert group
  group:
    name: sslcerts
    
- name: grafana | add grafana user (created when grafana is installed) to sslcert group
  user:
    name: grafana
    append: yes
    groups: sslcerts

- name: grafana | recursively change ownership of a /etc/letsencrypt
  file:
    path: /etc/letsencrypt
    state: directory
    recurse: yes
    owner: root
    group: sslcerts  

- name: grafana | change permissions to allow grafana access to certs
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - /etc/letsencrypt/live
    - /etc/letsencrypt/archive

- name: grafana | allow sslcerts group to read privkey1.pem
  file:
    path: "/etc/letsencrypt/archive/{{cert_domain}}/privkey1.pem"
    state: present
    mode: 0640
 

- name: grafana | edit /etc/grafana/grafana.ini change protocol to https
  replace:
    path: /etc/grafana/grafana.ini
    after: '# Protocol'
    before: '# The ip address to bind to'
    regexp: '^;(protocol = http)'
    replace:    '\1s'           

- name: grafana | edit /etc/grafana/grafana.ini change port to 443
  replace:
    path: /etc/grafana/grafana.ini
    after: '# The http port'
    before: '# The public facing'
    regexp: '^;(http_port =)'
    replace:    '\1 443'      

- name: grafana | edit /etc/grafana/grafana.ini change domain
  replace:
    path: /etc/grafana/grafana.ini
    after: '# The public facing domain name used to access grafana from a browser'
    before: '# Redirect to correct domain if host header does not match domain'
    regexp: '^;(domain =) localhost'
    replace:    '\1 {{ cert_domain }}'  
    
- name: grafana | edit /etc/grafana/grafana.ini change add https://domain
  replace:
    path: /etc/grafana/grafana.ini
    after: '# If you use reverse proxy'
    before: '# Serve Grafana from subpath'
    regexp: '^;(root_url =)'
    replace:    '\1 https://{{ cert_domain }}'      

- name: grafana | edit /etc/grafana/grafana.ini add cert location
  replace:
    path: /etc/grafana/grafana.ini
    after: '# https certs & key file'
    before: '# Unix socket path'
    regexp: '^;(cert_file =)'
    replace:    '\1 /etc/letsencrypt/live/{{cert_domain}}/fullchain.pem'       

- name: grafana | edit /etc/grafana/grafana.ini add key location
  replace:
    path: /etc/grafana/grafana.ini
    after: '# https certs & key file'
    before: '# Unix socket path'
    regexp: '^;(cert_key =)'
    replace:    '\1 /etc/letsencrypt/live/{{cert_domain}}/privkey.pem'   

- name: grafana | allow grafana to bind to ports less than 1024
  community.general.capabilities:
    path: /usr/sbin/grafana-server
    capability: cap_net_bind_service=+ep
    state: present

- name: grafana | restart grafana-server to pick up changes
  systemd:
    name: grafana-server
    state: started          
        
      
